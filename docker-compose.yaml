version: '3'
services:
  pgns:
    image: postgres
    env_file:
      - postgres.env
    healthcheck: &health
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - datans:/var/lib/postgresql/data
    
  ns:
    image: cirko33/others
    environment:
      - DB_URL=pgns
    env_file:
      - creds.env
    ports:
      - 8021:8080
    depends_on:
      pgns:
        condition: service_healthy

  pgbg:
    image: postgres
    env_file:
      - postgres.env
    healthcheck: *health
    volumes:
      - databg:/var/lib/postgresql/data
    
  bg:
    image: cirko33/others
    environment:
      - DB_URL=pgbg
    env_file:
      - creds.env
    ports:
      - 8011:8080
    depends_on:
      pgbg:
        condition: service_healthy

  pgnis:
    image: postgres
    env_file:
      - postgres.env
    healthcheck: *health
    volumes:
      - datanis:/var/lib/postgresql/data
    
  nis:
    image: cirko33/others
    environment:
      - DB_URL=pgnis
    env_file:
      - creds.env
    ports:
      - 8018:8080
    depends_on:
      pgnis:
        condition: service_healthy

  pgcentral:
    image: postgres
    env_file:
      - postgres.env
    healthcheck: *health
    volumes:
      - datacentral:/var/lib/postgresql/data
    
  central:
    image: cirko33/others
    environment:
      - DB_URL=pgcentral
    env_file:
      - creds.env
    depends_on:
      pgcentral:
        condition: service_healthy

volumes:
  datans:
  databg:
  datanis:
  datacentral: